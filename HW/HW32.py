"""
Реализуйте класс Buffer, который будет накапливать в себе элементы последовательности и выводить сумму пятерок
последовательных элементов по мере их накопления.
На вход приходит последовательность целых чисел. Вам надо обрабатывать ее следующим образом:
выводить на экран сумму первых пяти чисел этой последовательности, затем следующих 5 итд
Но последовательность не дается вам сразу целиком. С течением времени к вам поступают её последовательные части.
Например, сначала первые три элемента, потом следующие шесть, потом следующие два и т. д.

Одним из требований к классу является то, что он не должен хранить в себе больше элементов, чем ему действительно
необходимо, т. е. он не должен хранить элементы, которые уже вошли в пятерку, для которой была выведена сумма.
Класс должен иметь следующий вид

class Buffer:
  def __init__(self):
    # конструктор без аргументов

  def add(self, *a):
    # добавить следующую часть последовательности

  def get_current_part(self):
    # вернуть сумму пяти сохраненных элементов последовательности
"""


class BufferClass:
    def __init__(self):
        self.bufer = []
        self.five = []

    def add(self, *args):
        self.bufer.extend(args)
        while self.bufer:
            if len(self.bufer) >= 5:
                self.five = self.bufer[0:5]
                del self.bufer[0:5]
                self.get_current_part()
            elif len(self.bufer) < 5:
                break

    def get_current_part(self):
        print(sum(self.five))
        self.five =[]

if __name__ == '__main__':

    x = BufferClass()
    x.add(5, 5, 5, 5, 5,  6, 6)
    x.add(6, 6, 6,  7, 7)
    x.add(7, 7, 7)
    x.add(10, 5, 7, 8, 12, 45, 78, 83, 32, 35, 778)
    x.add(12, 15, 56, 13.56)
